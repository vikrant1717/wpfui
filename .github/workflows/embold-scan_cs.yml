# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      # Specify the solution file to restore packages for
      run: dotnet restore cppsamples.sln
      
    - name: Build
      # Specify the solution file to build
      run: dotnet build cppsamples.sln --no-restore
      
    - name: Test
      # Specify the solution file to run tests for
      run: dotnet test cppsamples.sln --no-build --verbosity normal

    - name: Embold Analyse
      run: | 
        # Step 1: Download and extract BrowserStack CQ Scanner
        curl https://v1.embold.io/nfs/CLI/browserstack-codequality-scanner.tar.gz -o browserstack-codequality-scanner-archive.tar.gz
        tar xvf browserstack-codequality-scanner-archive.tar.gz
        echo "Download and extract BrowserStack CQ Scanner done"
        # Step 2: Download repository configuration file
        curl --silent --location --request GET "http://3.66.212.6:3000/api/v1/repositories/79a8f45df05d0828012c5f7cd6f259ba/scans/config/download" --header "Authorization:Bearer ${{ secrets.EMBOLD_SCAN_TOKEN_CS}}" -o repository-configuration.json
        echo "Download repository configuration file done"
        # Step 3: Run scan using the 'analyse' command
        ./browserstack-codequality-scanner/bin/embold-scanner analyse -u http://3.66.212.6:3000 -t $EMBOLD_SCAN_TOKEN_CS -r 79a8f45df05d0828012c5f7cd6f259ba -b . -d ./embold-data -c ./repository-configuration.json -l ./embold-log -sh $GITHUB_WORKSPACE/embold-scanner-home -v
